name: Build and Release Executable

on:
  release:
    types: [created]
  workflow_dispatch: # Allows manual triggering

jobs:
  build:
    runs-on: windows-latest  # Use a Windows runner to build the .exe

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12' # Match the python version from your pyproject.toml

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller wheel
        pip install -e . # Install project dependencies from pyproject.toml in editable mode

    - name: Build executable with PyInstaller
      run: pyinstaller.exe .\\Certipy.spec --noconfirm

    - name: Get Release Upload URL
      id: get_release_info
      uses: actions/github-script@v7
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        script: |
          // If the trigger is a new release, use its upload URL
          if (context.eventName === 'release') {
            core.setOutput('upload_url', context.payload.release.upload_url);
            return;
          }
          // If triggered manually, find the latest release
          const { data: release } = await github.rest.repos.getLatestRelease({
            owner: context.repo.owner,
            repo: context.repo.repo
          });
          if (release) {
            core.setOutput('upload_url', release.upload_url);
          } else {
            core.setFailed('Could not find the latest release to attach the asset to.');
          }

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_info.outputs.upload_url }}
        asset_path: .\\dist\\Certipy.exe
        asset_name: Certipy.exe
        asset_content_type: application/vnd.microsoft.portable-executable